import com.codebox.speedrun.domain.data.common.enums.RunTimeEnum;
import com.codebox.speedrun.domain.data.common.enums.RunTypeEnum;

CREATE TABLE CategoryEntity(
    category_id              TEXT NOT NULL PRIMARY KEY,
    category_name            TEXT    NOT NULL,
    category_weblink         TEXT    NOT NULL,
    category_type            TEXT AS RunTypeEnum NOT NULL,
    category_rules           TEXT,
    category_miscellaneous   INTEGER AS Boolean NOT NULL,
    category_gameId          TEXT    NOT NULL
);

upsertCategory:
INSERT OR REPLACE INTO CategoryEntity(category_id, category_name, category_weblink, category_type, category_rules, category_miscellaneous, category_gameId)
VALUES (?, ?, ?, ?, ?, ?, ?);

CREATE TABLE CategoryPlayerEntity(
    categoryPlayer_categoryId  TEXT NOT NULL PRIMARY KEY,
    categoryPlayer_type        TEXT NOT NULL ,
    categoryPlayer_value       INTEGER NOT NULL
);

upsertCategoryPlayer:
INSERT OR REPLACE INTO CategoryPlayerEntity(categoryPlayer_categoryId, categoryPlayer_type, categoryPlayer_value)
VALUES (?, ?, ?);

observeCategoriesByGameId:
SELECT * FROM CategoryEntity
LEFT JOIN CategoryPlayerEntity ON CategoryPlayerEntity.categoryPlayer_categoryId = CategoryEntity.category_id
WHERE CategoryEntity.category_gameId = ?;

CREATE TABLE GameEntity(
    game_id                  TEXT NOT NULL PRIMARY KEY,
    game_boostReceived       INTEGER NOT NULL ,
    game_boostDistinctDonors INTEGER NOT NULL,
    game_abbreviation        TEXT NOT NULL,
    game_weblink             TEXT NOT NULL,
    game_discord             TEXT,
    game_released            INTEGER NOT NULL,
    game_releaseDate         TEXT NOT NULL,
    game_romhack             INTEGER AS Boolean DEFAULT 0 NOT NULL,
    game_created             TEXT
);

upsertGame:
INSERT OR REPLACE INTO GameEntity(game_id, game_boostReceived, game_boostDistinctDonors, game_abbreviation, game_weblink, game_discord, game_released, game_releaseDate, game_romhack, game_created)
VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?);

getGameById:
SELECT * FROM GameEntity
INNER JOIN GameRunTimeEntity ON GameRunTimeEntity.gameId = GameEntity.game_id
INNER JOIN RunTimeEntity ON RunTimeEntity.runTime = GameRunTimeEntity.runTime
INNER JOIN GameNamesEntity ON GameNamesEntity.gameName_gameId = GameEntity.game_id
INNER JOIN GameRuleSetEntity ON GameRuleSetEntity.gameRuleSet_gameId = GameEntity.game_id
INNER JOIN GameAssetsEntity ON GameAssetsEntity.gameAsset_gameId = GameEntity.game_id
LEFT JOIN GameDeveloperEntity ON GameDeveloperEntity.gameDeveloper_gameId = GameEntity.game_id
LEFT JOIN GamePublisherEntity ON GamePublisherEntity.gamePublisher_gameId = GameEntity.game_id
LEFT JOIN DeveloperEntity ON DeveloperEntity.developer_id = GameDeveloperEntity.gameDeveloper_developerId
LEFT JOIN PublisherEntity ON PublisherEntity.publisher_id = GamePublisherEntity.gamePublisher_publisherId
WHERE GameEntity.game_id = ?;

CREATE TABLE GameNamesEntity(
    gameName_gameId          TEXT NOT NULL PRIMARY KEY ,
    gameName_international   TEXT NOT NULL,
    gameName_japanese        TEXT,
    gameName_twitch          TEXT
);

upsertGameNames:
INSERT OR REPLACE INTO GameNamesEntity(gameName_gameId, gameName_international, gameName_japanese, gameName_twitch)
VALUES (?, ?, ?, ?);

CREATE TABLE GameRuleSetEntity(
    gameRuleSet_gameId              TEXT NOT NULL PRIMARY KEY ,
    gameRuleSet_showMilliseconds    INTEGER AS Boolean DEFAULT 0 NOT NULL,
    gameRuleSet_requireVerification INTEGER AS Boolean DEFAULT 0 NOT NULL,
    gameRuleSet_requireVideo        INTEGER AS Boolean DEFAULT 0 NOT NULL,
    gameRuleSet_defaultTime         TEXT AS RunTimeEnum NOT NULL,
    gameRuleSet_emulatorsAllowed    INTEGER AS Boolean DEFAULT 0 NOT NULL,
    FOREIGN KEY (gameRuleSet_defaultTime) REFERENCES RunTimeEntity (runTime)
);

CREATE INDEX defaultTimeIndex ON GameRuleSetEntity(gameRuleSet_defaultTime);

upsertGameRuleSet:
INSERT OR REPLACE INTO GameRuleSetEntity(gameRuleSet_gameId, gameRuleSet_showMilliseconds, gameRuleSet_requireVerification, gameRuleSet_requireVideo, gameRuleSet_defaultTime, gameRuleSet_emulatorsAllowed)
VALUES (?, ?, ?, ?, ?, ?);

CREATE TABLE GameAssetsEntity(
    gameAsset_gameId      TEXT NOT NULL PRIMARY KEY ,
    gameAsset_logo        TEXT,
    gameAsset_coverTiny   TEXT,
    gameAsset_coverSmall  TEXT,
    gameAsset_coverMedium TEXT,
    gameAsset_coverLarge  TEXT,
    gameAsset_icon        TEXT,
    gameAsset_trophy1st   TEXT,
    gameAsset_trophy2nd   TEXT,
    gameAsset_trophy3rd   TEXT,
    gameAsset_trophy4th   TEXT,
    gameAsset_background  TEXT,
    gameAsset_foreground  TEXT
);

upsertGameAssets:
INSERT OR REPLACE INTO GameAssetsEntity(gameAsset_gameId, gameAsset_logo, gameAsset_coverTiny, gameAsset_coverSmall, gameAsset_coverMedium, gameAsset_coverLarge, gameAsset_icon, gameAsset_trophy1st, gameAsset_trophy2nd, gameAsset_trophy3rd, gameAsset_trophy4th, gameAsset_background, gameAsset_foreground)
VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);

CREATE TABLE RunTimeEntity(
    runTime TEXT AS RunTimeEnum NOT NULL PRIMARY KEY
);

upsertRunTime:
INSERT OR REPLACE INTO RunTimeEntity(runTime)
VALUES (?);

CREATE TABLE GameRunTimeEntity(
     gameId     TEXT NOT NULL,
     runTime    TEXT AS RunTimeEnum NOT NULL,
     PRIMARY KEY (gameId, runTime)
);

upsertGameRunTime:
INSERT OR REPLACE INTO GameRunTimeEntity(gameId, runTime)
VALUES (?, ?);

CREATE TABLE GameDeveloperEntity(
     gameDeveloper_gameId         TEXT NOT NULL,
     gameDeveloper_developerId    TEXT NOT NULL,
     PRIMARY KEY (gameDeveloper_gameId, gameDeveloper_developerId)
);

upsertGameDeveloper:
INSERT OR REPLACE INTO GameDeveloperEntity(gameDeveloper_gameId, gameDeveloper_developerId)
VALUES (?, ?);

CREATE TABLE GamePublisherEntity(
     gamePublisher_gameId         TEXT NOT NULL,
     gamePublisher_publisherId    TEXT NOT NULL,
     PRIMARY KEY (gamePublisher_gameId, gamePublisher_publisherId)
);

upsertGamePublisher:
INSERT OR REPLACE INTO GamePublisherEntity(gamePublisher_gameId, gamePublisher_publisherId)
VALUES (?, ?);

CREATE TABLE PlatformEntity(
     platform_id         TEXT NOT NULL PRIMARY KEY,
     platform_name       TEXT NOT NULL,
     platform_released   INTEGER NOT NULL
);

upsertPlatform:
INSERT OR REPLACE INTO PlatformEntity(platform_id, platform_name, platform_released)
VALUES (?, ?, ?);

CREATE TABLE DeveloperEntity(
     developer_id     TEXT NOT NULL PRIMARY KEY,
     developer_name   TEXT NOT NULL
);

upsertDeveloper:
INSERT OR REPLACE INTO DeveloperEntity(developer_id, developer_name)
VALUES (?, ?);

CREATE TABLE PublisherEntity(
     publisher_id     TEXT NOT NULL PRIMARY KEY,
     publisher_name   TEXT NOT NULL
);

upsertPublisher:
INSERT OR REPLACE INTO PublisherEntity(publisher_id, publisher_name)
VALUES (?, ?);

CREATE TABLE PlayerEntity(
     id     TEXT NOT NULL PRIMARY KEY,
     rel    TEXT NOT NULL
);

upsertPlayer:
INSERT OR REPLACE INTO PlayerEntity(id, rel)
VALUES (?, ?);

CREATE TABLE UserEntity(
     id             TEXT NOT NULL PRIMARY KEY,
     weblink        TEXT NOT NULL,
     role           TEXT NOT NULL,
     signup         TEXT,
     location       TEXT,
     twitch         TEXT,
     hitbox         TEXT,
     youtube        TEXT,
     twitter        TEXT,
     speedrunslive  TEXT,
     icon           TEXT,
     supporterIcon  TEXT,
     image          TEXT,
     FOREIGN KEY (id) REFERENCES PlayerEntity(id)
);

upsertUser:
INSERT OR REPLACE INTO UserEntity(id, weblink, role, signup, location, twitch, hitbox, youtube, twitter, speedrunslive, icon, supporterIcon, image)
VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);

CREATE TABLE UserNamesEntity(
    userId          TEXT NOT NULL PRIMARY KEY,
    international   TEXT NOT NULL,
    japanese        TEXT
);

upsertUserNames:
INSERT OR REPLACE INTO UserNamesEntity(userId, international, japanese)
VALUES (?, ?, ?);

CREATE TABLE UserNamesStyleEntity(
    userId          TEXT NOT NULL PRIMARY KEY,
    style           TEXT NOT NULL,
    colorLight      TEXT,
    colorDark       TEXT,
    colorFromLight  TEXT,
    colorFromDark   TEXT,
    colorToLight    TEXT,
    colorToDark     TEXT
);

upsertUserNameStyles:
INSERT OR REPLACE INTO UserNamesStyleEntity(userId, style, colorLight, colorDark, colorFromLight, colorFromDark, colorToLight, colorToDark)
VALUES (?, ?, ?, ?, ?, ?, ?, ?);

CREATE TABLE GuestEntity(
    id      TEXT NOT NULL PRIMARY KEY,
    name    TEXT,
    FOREIGN KEY (id) REFERENCES PlayerEntity(id)
);

upsertGuests:
INSERT OR REPLACE INTO GuestEntity(id, name)
VALUES (?, ?);

CREATE TABLE LocationEntity(
    id                      TEXT NOT NULL PRIMARY KEY,
    countryCode             TEXT NOT NULL,
    countryInternational    TEXT NOT NULL,
    countryJapanese         TEXT,
    regionCode              TEXT,
    regionInternational     TEXT,
    regionJapanese          TEXT
);

upsertLocation:
INSERT OR REPLACE INTO LocationEntity(id, countryCode, countryInternational, countryJapanese, regionCode, regionInternational, regionJapanese)
VALUES (?, ?, ?, ?, ?, ?, ?);

CREATE TABLE UserLocationEntity(
    userId      TEXT NOT NULL,
    locationId  TEXT NOT NULL,
    PRIMARY KEY (userId, locationId)
);

upsertUserLocation:
INSERT OR REPLACE INTO UserLocationEntity(userId, locationId)
VALUES (?, ?);
